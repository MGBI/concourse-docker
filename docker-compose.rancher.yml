# This file merged with docker-compose.yml creates a production-like
# configuration for deploying the Rancher stack.
# TODO: Rancher Secrets
# Remember to start Rancher Secrets from Catalog before the deployment!
version: '2'

services:
  lb:
    image: rancher/lb-service-haproxy
    ports:
      - 80:80
      - 443:443
    labels:
      # Put load balancer containers on hosts with label concourse=true
      io.rancher.scheduler.affinity:host_label: concourse=true
      # Allow to interact with the Rancher API
      io.rancher.container.create_agent: 'true'
      io.rancher.container.agent.role: environmentAdmin

  letsencrypt:
    image: mgbi/rancher-letsencrypt:v1.0.0
    environment:
      API_VERSION: Production
      CERT_NAME: ${DOMAIN}
      DNS_RESOLVERS: 8.8.8.8:53,8.8.4.4:53
      DOMAINS: ${DOMAIN}
      EMAIL: ${ADMIN_EMAIL}
      EULA: 'Yes'
      PROVIDER: HTTP
      PUBLIC_KEY_TYPE: RSA-2048
      RENEWAL_PERIOD_DAYS: '20'
      RENEWAL_TIME: '0'
      RUN_ONCE: 'false'
    volumes:
    - /var/lib/rancher:/var/lib/rancher
    labels:
      # Put let's encrypt containers on hosts with label sentry=true
      io.rancher.scheduler.affinity:host_label: concourse=true
      io.rancher.container.agent.role: environment
      io.rancher.container.create_agent: 'true'

  db:
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: concourse=true
    restart: on-failure

  web:
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: concourse=true
    restart: on-failure

  worker:
    labels:
      io.rancher.container.pull_image: always
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.affinity:host_label: concourse=true
    restart: on-failure
